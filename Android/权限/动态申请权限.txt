1、检查权限
2、有 继续
   没有 动态申请权限
3、处理回调
 
/**
*动态申请权限
*/
//定义一个变量 记录当前权限的状态
int checkSlfePermission =
		ContextCompat.checkSelfPermission(this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE);

//当前么有相应的权限
if(checkSlfePermission == PackageManager.PERMISSION_DENIED){
	//申请权限 （弹出一个申请权限的对话框）
	ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},100 );

}else
	//申请到了权限
if(checkSlfePermission == PackageManager.PERMISSION_GRANTED){

}



/**
 * Requests permission.
 *
 * @param activity
 * @param requestCode request code, e.g. if you need request CAMERA permission,parameters is PermissionUtils.CODE_CAMERA
 */
public static void requestPermission(final Activity activity, final int requestCode, PermissionGrant permissionGrant) {
	if (activity == null) {
		return;
	}

	Log.i(TAG, "requestPermission requestCode:" + requestCode);
	if (requestCode < 0 || requestCode >= requestPermissions.length) {
		Log.w(TAG, "requestPermission illegal requestCode:" + requestCode);
		return;
	}

	final String requestPermission = requestPermissions[requestCode];

	//如果是6.0以下的手机，ActivityCompat.checkSelfPermission()会始终等于PERMISSION_GRANTED，
// 但是，如果用户关闭了你申请的权限(如下图，在安装的时候，将一些权限关闭了)，
//ActivityCompat.checkSelfPermission()则可能会导致程序崩溃(java.lang.RuntimeException: Unknown exception code: 1 msg null)，
// 你可以使用try{}catch(){},处理异常，也可以判断系统版本，低于23就不申请权限，直接做你想做的。permissionGrant.onPermissionGranted(requestCode);
//        if (Build.VERSION.SDK_INT < 23) {
//            permissionGrant.onPermissionGranted(requestCode);
//            return;
//        }

	int checkSelfPermission;
	try {
		checkSelfPermission = ActivityCompat.checkSelfPermission(activity, requestPermission);
	} catch (RuntimeException e) {
		Toast.makeText(activity, "please open this permission", Toast.LENGTH_SHORT)
				.show();
		Log.e(TAG, "RuntimeException:" + e.getMessage());
		return;
	}

	if (checkSelfPermission != PackageManager.PERMISSION_GRANTED) {
		Log.i(TAG, "ActivityCompat.checkSelfPermission != PackageManager.PERMISSION_GRANTED");


		if (ActivityCompat.shouldShowRequestPermissionRationale(activity, requestPermission)) {
			Log.i(TAG, "requestPermission shouldShowRequestPermissionRationale");
			shouldShowRationale(activity, requestCode, requestPermission);

		} else {
			Log.d(TAG, "requestCameraPermission else");
			ActivityCompat.requestPermissions(activity, new String[]{requestPermission}, requestCode);
		}

	} else {
		Log.d(TAG, "ActivityCompat.checkSelfPermission ==== PackageManager.PERMISSION_GRANTED");
		Toast.makeText(activity, "opened:" + requestPermissions[requestCode], Toast.LENGTH_SHORT).show();
//得到权限的时候，就可以在回调里面做你想做的事情了
		permissionGrant.onPermissionGranted(requestCode);
	}
}